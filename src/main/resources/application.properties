# Database
spring.jpa.hibernate.ddl-auto=update
# localhost
#spring.datasource.url=jdbc:mysql://localhost:3306/analyst
# local VM
spring.datasource.url=jdbc:mysql://192.168.5.125:3306/analyst
spring.datasource.username=root
spring.datasource.password=[htydfv1303
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true

# File Repo
files.path=E:/test_file_analyst
#files.path=C:/test_file_analyst

# Max upload file size
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Периодичность проверок Агентом в цикле работы
app.agent.cycle_period=1

# Тестовый запуск (Проверка датасетов)
app.is_test=false

# *** НАСТРОЙКИ ОБУЧЕНИЯ *** //
# Коефициент скорости обучения сети
nn.training.learning_rate=0.005
# Коефициент регуляризации l1, l2
nn.training.regularization=0.0
# Размер BATCH подаваемый при обучении сети
nn.training.batch_size=32
# Кол-во попыток обучения нейронной сети (в случае не обучаемости)
nn.training.limit_tearning=3
# Стандартное обучение по размеченным данным
nn.training.first_training=false
# Минимальное движение для открытия сделки
nn.training.percent_of_take_profit=5.0
# Минимальное движение для закрытия сделки
nn.training.percent_of_stop_loss=1.0
# Процент взятый за еденицу для вывода сети (нормализация) // => +1 output = +10%
nn.training.percent_of_normalisation=10

# Обучение по алгоритму QLEARNING
nn.training.q_learning=false
# Глубина исторических данных для ввода в нейронную сеть // 1 торговый день = 105 свечей
nn.training.q_learning.lenght_of_history=250           
# Количество сделок, после которых сеть переобучается
nn.training.q_learning.update=100
# Штраф при не совершении сделок
nn.training.q_learning.penalty=-0.096

# *** РАНДОМНОСТЬ *** // Решения о сделке принимаются рандомно, затем держим позицию указанное кол-во шагов и закрываем. После чего оцениваем и передаём в q-learning
nn.random=false
# Процент решений принятых рандомно (Полезно для поиска новых стратегий при обучении)
nn.random.percent=1
# Диапазон шагов рандомной сделки (Кол-во обпределяется рандомно и сделка не закрывается пока кол-во шаго не будет пройдено)
nn.random.min=6
nn.random.max=105


# *** НАСТРОЙКИ НЕЙРОННОЙ СЕТИ *** //
# Кол-во циклов обучения нейронной сети
nn.setting.fit_cycles=500 
# Процент тестовых данных
nn.setting.percent_test=20
# Кол-во DATASET'ов собранных для обучения нейронной сети
nn.setting.size.dataset=250
# Минимальная длина сделки в свечах
nn.setting.size.min=3
# Максимальная длина сделки в свечах
nn.setting.size.max=210

# Путь хранениния нейронных сетей
public final static String PATH_NEURON_NET = System.getProperty("user.dir") + File.separator +  "multi_neunet" + File.separator;